#ifndef _SENSOR_H_
#define _SENSOR_H_

#include "stdint.h"

/***************************************************************
 * 函数名称: sht30_init
 * 说    明: sht30初始化
 * 参    数: 无
 * 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
 ***************************************************************/
static uint32_t sht30_init(void);
/***************************************************************
 * 函数名称: pcf8575_init
 * 说    明: PCF8575初始化
 * 参    数: 无
 * 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
 ***************************************************************/
static uint32_t pcf8575_init(void);
/***************************************************************
* 函数名称: sht30_calc_RH
* 说    明: 湿度计算
* 参    数: u16sRH：读取到的湿度原始数据
* 返 回 值: 计算后的湿度数据
***************************************************************/
static float sht30_calc_RH(uint16_t u16sRH);
/***************************************************************
* 函数名称: sht30_calc_temperature
* 说    明: 温度计算
* 参    数: u16sT：读取到的温度原始数据
* 返 回 值: 计算后的温度数据
***************************************************************/
static float sht30_calc_temperature(uint16_t u16sT);
/***************************************************************
* 函数名称: sht30_check_crc
* 说    明: 检查数据正确性
* 参    数: data：读取到的数据
            nbrOfBytes：需要校验的数量
            checksum：读取到的校对比验值
* 返 回 值: 校验结果，0-成功 1-失败
***************************************************************/
static uint8_t sht30_check_crc(uint8_t *data, uint8_t nbrOfBytes, uint8_t checksum);
/***************************************************************
* 函数名称: sht30_read_data
* 说    明: 读取温度、湿度
* 参    数: temp,humi：读取到的数据,通过指针返回 
* 返 回 值: 无
***************************************************************/
void sht30_read_data(double *temp, double *humi);
/***************************************************************
* 函数名称: pcf8575_set_outputs
* 说    明: 设置PCF8575输出状态
* 参    数: port0 - P0端口输出值 (P07-P00)
*          port1 - P1端口输出值 (P17-P10)
* 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
***************************************************************/
uint32_t pcf8575_set_outputs(uint8_t port0, uint8_t port1);
/***************************************************************
* 函数名称: pcf8575_get_inputs
* 说    明: 读取PCF8575输入状态
* 参    数: port0 - 存储P0端口输入值的指针
*          port1 - 存储P1端口输入值的指针
* 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
***************************************************************/
uint32_t pcf8575_get_inputs(uint8_t *port0, uint8_t *port1);
/***************************************************************
* 函数名称: pcf8575_set_pin
* 说    明: 设置单个引脚状态
* 参    数: pin - 引脚编号 (0-15: 0-7=P0, 8-15=P1)
*          state - 状态 (0=低电平, 1=高电平)
* 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
***************************************************************/
uint32_t pcf8575_set_pin(uint8_t pin, uint8_t state);
/***************************************************************
* 函数名称: pcf8575_get_pin
* 说    明: 读取单个引脚状态
* 参    数: pin - 引脚编号 (0-15: 0-7=P0, 8-15=P1)
*          state - 存储引脚状态的指针
* 返 回 值: uint32_t IOT_SUCCESS表示成功 IOT_FAILURE表示失败
***************************************************************/
uint32_t pcf8575_get_pin(uint8_t pin, uint8_t *state);
/***************************************************************
* 函数名称: i2c_dev_init
* 说    明: i2c设备初始化
* 参    数: 无
* 返 回 值: 无
***************************************************************/
void i2c_dev_init(void);

#endif